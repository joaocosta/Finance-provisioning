#TIPS
http://gitready.com/beginner/2009/01/11/reverting-files.html


#Initial setup
git config --global user.name "Jo√£o Costa"
git config --global user.email "joaocosta@zonalivre.org"


#Download repository from origin server
git clone git@github.com:joaocosta/Finance--HostedTrader.git

#Push changes to origin server
git push origin

#Pull changes from origin server to local master branch
git pull origin master

To ignore files, create a .gitignore file in the relevant directory

#retrieve file
git checkout $file

# Revert to previous version of a file:
git checkout HEAD^ Trader.pl

# Tag
git tag -a 'TAGNAME' -m 'comment'
git push --tags

# Recover a deleted file
git checkout $(git rev-list -n 1 HEAD -- "$file")^ -- "$file"

# Remove a deleted file from branch history
https://help.github.com/articles/remove-sensitive-data
http://www.ducea.com/2012/02/07/howto-completely-remove-a-file-from-git-history/
#git repack -Ad # If need to recreate packs
git verify-pack -v .git/objects/pack/pack-*.idx | sort -k3n # sort history objects by size
SHA1=`git verify-pack -v .git/objects/pack/pack-*.idx | sort -k3n | tail -n 1 | cut -f 1 -d \ `
for rev in $(git rev-list --all); do git ls-tree -r $rev | grep $SHA1; done | uniq #For the SHA1 code, figure out what the path isa
#then actually remove it from branch history
git filter-branch --index-filter "git rm --cached --ignore-unmatch $FILEPATH"  --prune-empty -- --all
rm -rf .git/refs/original/
git reflog expire --expire=now --all
git gc --prune=now
git gc --aggressive --prune=now



